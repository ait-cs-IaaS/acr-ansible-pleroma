---

- name: Create first Pleroma admin user
  become: true
  become_user: "{{ pleroma_user }}"
  ansible.builtin.shell: 
    cmd: ./bin/pleroma_ctl user new {{ pleroma_admin_user }} {{ pleroma_admin_email }} --admin --password {{ pleroma_admin_password }} --assume-yes
  args:
    chdir: "{{ pleroma_base_path }}"
  register: new_user_log
  retries: 10
  delay: 10
  until: '"nodedown" not in new_user_log.stderr'
  failed_when:
    - new_user_log.rc != 0
    - '"has already been taken" not in new_user_log.stderr and "nodedown" not in new_user_log.stderr'

- name: Get pleroma folder name
  become: true
  ansible.builtin.shell:
    cmd: ls | grep pleroma-*
  args:
    chdir: "{{ pleroma_base_path }}/lib/"
  register: pleroma_folder_name

- name: Copy theme to server
  become: true
  ansible.builtin.copy:
    src: files/y-theme.json
    dest: "{{ pleroma_base_path }}/lib/{{ pleroma_folder_name.stdout }}/priv/static/static/themes/pleroma-dark.json"
    owner: "{{ pleroma_user }}"
    group: "{{ pleroma_user }}"

- name: Add custom about page
  become: true
  ansible.builtin.template:
    src: templates/terms-of-service.html.j2
    dest: "{{ pleroma_base_path }}/lib/{{ pleroma_folder_name.stdout }}/priv/static/static/terms-of-service.html"
    owner: "{{ pleroma_user }}"
    group: "{{ pleroma_user }}"
    mode: "0644"

- name: Copy logo to server
  become: true
  ansible.builtin.copy:
    src: files/logo.svg
    dest: "{{ pleroma_base_path }}/lib/{{ pleroma_folder_name.stdout }}/priv/static/static/logo.svg"
    owner: "{{ pleroma_user }}"
    group: "{{ pleroma_user }}"

- name: Remove images
  become: true
  ansible.builtin.file:
    path: "{{ pleroma_base_path }}/lib/{{ pleroma_folder_name.stdout }}/priv/static/images/"
    state: absent

- name: Create images folder
  become: true
  ansible.builtin.file:
    path: "{{ pleroma_base_path }}/lib/{{ pleroma_folder_name.stdout }}/priv/static/images/"
    state: directory
    owner: "{{ pleroma_user }}"
    group: "{{ pleroma_user }}"

- name: Copy avi to server
  become: true
  ansible.builtin.copy:
    src: files/y.png
    dest: "{{ pleroma_base_path }}/lib/{{ pleroma_folder_name.stdout }}/priv/static/images/avi.png"
    owner: "{{ pleroma_user }}"
    group: "{{ pleroma_user }}"

- name: Copy favicon to server
  become: true
  ansible.builtin.copy:
    src: files/{{ item.src }}
    dest: "{{ pleroma_base_path }}/lib/{{ pleroma_folder_name.stdout }}/priv/{{ item.dest }}"
    owner: "{{ pleroma_user }}"
    group: "{{ pleroma_user }}"
  with_items:
    - src: favicon.png
      dest: static/adminfe/favicon.ico
    - src: favicon.ico
      dest: static/favicon.png

- name: Remove banner file
  become: true
  ansible.builtin.file:
    path: "{{ pleroma_base_path }}/lib/{{ pleroma_folder_name.stdout }}/priv/static/images/banner.png"
    state: absent

- name: Copy config to server
  become: true
  ansible.builtin.copy:
    src: files/pleroma_config.json
    dest: "{{ pleroma_base_path }}/lib/{{ pleroma_folder_name.stdout }}/priv/static/static/config.json"
    owner: "{{ pleroma_user }}"
    group: "{{ pleroma_user }}"
  notify: Restart Pleroma

- name: Find the CSS file
  become: true
  ansible.builtin.shell:
    cmd: ls | grep app.*.css -m1
  args:
    chdir: "{{ pleroma_base_path }}/lib/{{ pleroma_folder_name.stdout }}/priv/static/static/css/"
  register: css_file

- name: Insert custom CSS line into the found CSS file
  become: true
  ansible.builtin.lineinfile:
    path: "{{ pleroma_base_path }}/lib/{{ pleroma_folder_name.stdout }}/priv/static/static/css/{{ css_file.stdout }}"
    line: "{{ item }}"
    insertafter: EOF
  when: css_file.rc == 0
  with_items:
    - ".features-panel, .staff-panel, .mrf-transparency-panel, .site-name, .user-panel .login .panel-heading { display: none !important; }"
    - "#content .panel .input { margin-top: 4px; border: 1px solid #ffffff !important; }"
    - ".login-form label { color: #ffffff !important; }"

- name: Run all handlers
  meta: flush_handlers
